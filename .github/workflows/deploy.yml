# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: deploy

on:
  push:
    branches: [ master ]
    paths:
      - 'packages'

jobs:
  deploy-web:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/movie-web

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install
        run: yarn

      - name: Build
        run: yarn build

      - name: Deploy to server
        uses: Pendect/action-rsyncer@v1.1.0
        env:
          DEPLOY_KEY: ${{ secrets.SERVER_SSH_KEY }}
        with:
          flags: "-avzr -O --no-perms --delete --exclude='node_modules' --exclude='.git' --exclude='.github' --exclude='log' --exclude='production.json'"
          ssh_options: '-p ${{ secrets.SERVER_SSH_PORT }}'
          src: 'packages/movie-web/'
          dest: '${{ secrets.SERVER_USER }}@${{ secrets.WEB_SERVER_HOST }}:${{ secrets.WEB_SERVER_DESK }}'

      - name: Restart PM2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.WEB_SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: "cd ${{ secrets.WEB_SERVER_DESK }} && yarn && pm2 restart movie-web"

  deploy-app-ui:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/movie-app-ui
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install
        run: yarn

      - name: Build
        run: yarn build

      - name: Deploy to serverless
        env:
          TENCENT_SECRET_ID: ${{ secrets.TENCENT_SECRET_ID }}
          TENCENT_SECRET_KEY: ${{ secrets.TENCENT_SECRET_KEY }}
        run: yarn deploy

  validate-deploy:
    if: always()
    needs: [deploy-web, deploy-app-ui]
    runs-on: ubuntu-latest
    steps:
      - name: Check Back End Endpoint
        uses: lakuapik/gh-actions-http-status@v1
        with:
          sites: '["https://api.movie.jinwenjie.me/genres"]'
          expected: '[200]'

      - name: Check Front End Endpoint
        uses: lakuapik/gh-actions-http-status@v1
        with:
          sites: '["https://movieparadise.netlify.app", "https://movie-paradise-1256033731.cos-website.ap-chengdu.myqcloud.com"]'
          expected: '[200, 200]'
